<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectReviewList">
		SELECT A.RNUM
		     , A.SATISFIED
		     , A.REVIEW_CONTENT
		     , A.USER_ID
		     , A.REPLY_DATE
		     , A.ORDER_TIME
		  FROM (SELECT  ROWNUM RNUM
				      , B.SATISFIED
				      , B.REVIEW_CONTENT
				      , B.USER_ID
				      , B.REPLY_DATE
				      , B.ORDER_TIME
				   FROM (SELECT
						        R.SATISFIED
						      , R.REVIEW_CONTENT
						      , UT.USER_ID
						      , Y.REPLY_DATE
						      , OT.ORDER_TIME
					       FROM REVIEW R
					       JOIN TOTAL_REVIEW T ON(R.REVIEW_CODE = T.REVIEW_CODE)
					       JOIN REVIEW_REPLY Y ON(T.REPLY_CODE = Y.REPLY_CODE)
					       JOIN ORDER_TABLE OT ON(R.ORDER_CODE = OT.ORDER_CODE)
					       JOIN USER_TABLE UT ON(OT.USER_CODE = UT.USER_CODE)
					       WHERE R.STORE_CODE = ?
				       ) B
		       ) A
		 WHERE A.RNUM BETWEEN ? AND ? 
	</entry>
	<entry key="selectReviewReplyTotalCount">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE STORE_CODE = ?
	</entry>
	<entry key="searchsatisfiedBoardCount">
		SELECT A.RNUM
		     , A.SATISFIED
		     , A.REVIEW_CONTENT
		     , A.USER_ID
		     , A.REPLY_DATE
		     , A.ORDER_TIME
		  FROM (SELECT  ROWNUM RNUM
				      , B.SATISFIED
				      , B.REVIEW_CONTENT
				      , B.USER_ID
				      , B.REPLY_DATE
				      , B.ORDER_TIME
				   FROM (SELECT
						        R.SATISFIED
						      , R.REVIEW_CONTENT
						      , UT.USER_ID
						      , Y.REPLY_DATE
						      , OT.ORDER_TIME
					       FROM REVIEW R
					       JOIN TOTAL_REVIEW T ON(R.REVIEW_CODE = T.REVIEW_CODE)
					       JOIN REVIEW_REPLY Y ON(T.REPLY_CODE = Y.REPLY_CODE)
					       JOIN ORDER_TABLE OT ON(R.ORDER_CODE = OT.ORDER_CODE)
					       JOIN USER_TABLE UT ON(OT.USER_CODE = UT.USER_CODE)
					       WHERE R.STORE_CODE = ?
				       ) B
		 WHERE B.SATISFIED LIKE '%' || ? || '%'
		       ) A
		 WHERE A.RNUM BETWEEN ? AND ? 
	</entry>
	<entry key="searchreviewContentBoardCount">
		SELECT A.RNUM
		     , A.SATISFIED
		     , A.REVIEW_CONTENT
		     , A.USER_ID
		     , A.REPLY_DATE
		     , A.ORDER_TIME
		  FROM (SELECT  ROWNUM RNUM
				      , B.SATISFIED
				      , B.REVIEW_CONTENT
				      , B.USER_ID
				      , B.REPLY_DATE
				      , B.ORDER_TIME
				   FROM (SELECT
						        R.SATISFIED
						      , R.REVIEW_CONTENT
						      , UT.USER_ID
						      , Y.REPLY_DATE
						      , OT.ORDER_TIME
					       FROM REVIEW R
					       JOIN TOTAL_REVIEW T ON(R.REVIEW_CODE = T.REVIEW_CODE)
					       JOIN REVIEW_REPLY Y ON(T.REPLY_CODE = Y.REPLY_CODE)
					       JOIN ORDER_TABLE OT ON(R.ORDER_CODE = OT.ORDER_CODE)
					       JOIN USER_TABLE UT ON(OT.USER_CODE = UT.USER_CODE)
					       WHERE R.STORE_CODE = ?
				       ) B
		 WHERE B.REVIEW_CONTENT LIKE '%' || ? || '%'
		       ) A
		 WHERE A.RNUM BETWEEN ? AND ? 
	</entry>
	<entry key="searchuserIdBoardCount">
		SELECT A.RNUM
		     , A.SATISFIED
		     , A.REVIEW_CONTENT
		     , A.USER_ID
		     , A.REPLY_DATE
		     , A.ORDER_TIME
		  FROM (SELECT  ROWNUM RNUM
				      , B.SATISFIED
				      , B.REVIEW_CONTENT
				      , B.USER_ID
				      , B.REPLY_DATE
				      , B.ORDER_TIME
				   FROM (SELECT
						        R.SATISFIED
						      , R.REVIEW_CONTENT
						      , UT.USER_ID
						      , Y.REPLY_DATE
						      , OT.ORDER_TIME
					       FROM REVIEW R
					       JOIN TOTAL_REVIEW T ON(R.REVIEW_CODE = T.REVIEW_CODE)
					       JOIN REVIEW_REPLY Y ON(T.REPLY_CODE = Y.REPLY_CODE)
					       JOIN ORDER_TABLE OT ON(R.ORDER_CODE = OT.ORDER_CODE)
					       JOIN USER_TABLE UT ON(OT.USER_CODE = UT.USER_CODE)
					       WHERE R.STORE_CODE = ?
				       ) B
		 WHERE B.USER_ID LIKE '%' || ? || '%'
		       ) A
		 WHERE A.RNUM BETWEEN ? AND ? 
	</entry>
	<entry key="modifyPictures">
		  UPDATE PICTURE P
		    SET P.ORIGIN_NAME = ?,
		        P.UPLOAD_DATE = SYSDATE,
		        P.REVISED_NAME = ?,
		        P.ROUTE = ?
          WHERE P.PICTURE_CODE = ( SELECT
          							 	  C.PICTURE_CODE
						             FROM STORE_TABLE A
						             JOIN LICENSE_MANAGE B ON(A.BUSINESS_REGIST_CODE = B.BISI_CODE)
						             JOIN PICTURE C ON(B.PICTURE_CODE = C.PICTURE_CODE)
						             JOIN USER_TABLE D ON (A.USER_CODE = D.USER_CODE)
						            WHERE D.USER_CODE = ?)
	</entry>
	<entry key="modifyPictures2">
		  UPDATE PICTURE P
		    SET P.ORIGIN_NAME = ?,
		        P.UPLOAD_DATE = SYSDATE,
		        P.REVISED_NAME = ?,
		        P.ROUTE = ?
          WHERE P.PICTURE_CODE = ( SELECT
          							 	  C.PICTURE_CODE+1
						             FROM STORE_TABLE A
						             JOIN LICENSE_MANAGE B ON(A.BUSINESS_REGIST_CODE = B.BISI_CODE)
						             JOIN PICTURE C ON(B.PICTURE_CODE = C.PICTURE_CODE)
						             JOIN USER_TABLE D ON (A.USER_CODE = D.USER_CODE)
						            WHERE D.USER_CODE = ?)
	</entry>
	<!-- <entry key="modifyBISIPictures">
		 UPDATE PICTURE P
				    SET P.ORIGIN_NAME = ?,
				        P.REVISED_NAME = ?,
				        P.ROUTE = ?,
				        P.UPLOAD_DATE = SYSDATE
				  WHERE PICTURE_CODE = (SELECT
			                              PICTURE_CODE -1
			                         FROM LICENSE_MANAGE L
			                        WHERE L.STORE_ADDRESS = ?);
	</entry> -->
	<!-- <entry key="modifyStorePictures">
		 UPDATE PICTURE P
   SET P.ORIGIN_NAME = ?,
       P.REVISED_NAME = ?,
       P.ROUTE = ?,
       P.UPLOAD_DATE = SYSDATE
 WHERE PICTURE_CODE = (SELECT
                              PICTURE_CODE
                         FROM LICENSE_MANAGE L
                        WHERE L.STORE_ADDRESS = ?);
	</entry> -->
	<entry key="modifyLicenseManager">
	UPDATE LICENSE_MANAGE L
	   SET 
	   	   L.STORE_NAME = ?
		 , L.BISI_DIV = ?
		 , L.OPEN_DATE = ?
		 , L.STORE_ADDRESS = ?
		 , L.COMPANY = ?
		 , L.ITEM = ?
		 , L.MAIN_ADDRESS = ?
		 , L.LIC_DATE = ?
	 WHERE L.BISI_CODE = (SELECT
	 							 S.BUSINESS_REGIST_CODE
	 						FROM STORE_TABLE S
	 					   WHERE STORE_CODE = ?)
	</entry>
	<entry key="modifyOwner">
		UPDATE USER_TABLE U
	  	   SET 
	  	   	   U.USER_PWD = ?
	  	   	 , U.USER_PHONE = ?
			 , U.USER_ADDRESS = ?
			 , U.USER_EMAIL = ?
			 , U.ROLE_CODE = ?
		 WHERE U.USER_NO = ?
	</entry>
	<entry key="modifyStore">
	UPDATE STORE_TABLE S
	   SET 
	       S.STORE_NAME = ?
		 , S.CATEGORY = ?
		 , S.ENROLL_DATE = SYSDATE
		 , S.TYPE_CODE = ?
		 , S.STORE_ADDR = ?
		 , S.STORE_INFO = ?
	 WHERE S.STORE_CODE = ?
	</entry>
	
	
	
	<!-- ===================================== -->
	
	<entry key="BeforeModifyInfo">
		SELECT
			   U.USER_ID,
			   U.USER_NAME,
			   S.OWNER_NO
		  FROM USER_TABLE U
		  JOIN STORE_TABLE S ON(U.USER_CODE = S.USER_CODE)
		 WHERE U.USER_ID = ?
	</entry>
	
	<entry key="registPictures">
	INSERT
	  INTO PICTURE
	VALUES
	(
	  SEQ_PICTURE.NEXTVAL
	, SYSDATE
	, 'N'
	, ?
	, ?
	, ?
	)
	</entry>
	
	<entry key="registLicenseManager">
	INSERT
	  INTO LICENSE_MANAGE
	VALUES
	(
	  ?
	, ?
	, ?
	, ?
	, ?
	, ?
	, ?
	, ?
	, SEQ_LMANAGER.NEXTVAL
	, SEQ_PICTURE.CURRVAL-1
	)
	</entry>
	<entry key="registOwner">
	INSERT
	  INTO USER_TABLE
	  VALUES
	  (  
	    SEQ_USER.NEXTVAL
	  , ?
	  , ?
	  , ?
	  , ?
	  , ?
	  , DEFAULT
	  , ?
	  , 'N'
	  , '2'
	  , 'N'
	  , NULL
	  , ?
	  )
	</entry>
	<entry key="registStore">
	INSERT
	  INTO STORE_TABLE
	VALUES
	(
	  ?
	, ?
	, ?
	, ?
	, SEQ_USER.CURRVAL
	, SEQ_LMANAGER.CURRVAL
	, SEQ_STORE.NEXTVAL
	, 'N'
	, SYSDATE
	, ?
	, ?
	, ?
	)
	</entry>
	<entry key="registPICtable">
	INSERT
	  INTO STORE_PIC_TABLE
	VALUES
	(
	  SEQ_PICTURE.CURRVAL
	, SEQ_STORE.CURRVAL
	)
	</entry>
	<entry key="registPICtable2">
	INSERT
	  INTO STORE_PIC_TABLE
	VALUES
	(
	  SEQ_PICTURE.CURRVAL-1
	, SEQ_STORE.CURRVAL
	)
	</entry>
	<entry key="selectEncryptedPwd">
		SELECT 
		  	   U.USER_PWD
	 	  FROM USER_TABLE U
	 	 WHERE U.WITHDRAW_YN = 'N'
	 	   AND U.USER_ID = ?
	</entry>
	<!-- 로그인시 세션에 넣어줄 값들 -->
	<entry key="selectLoginOwner">
		SELECT
			   U.USER_CODE
			 , U.USER_ID
			 , U.USER_NAME
			 , U.USER_PHONE
			 , U.USER_ADDRESS
			 , U.POINT
			 , U.USER_EMAIL
			 , U.WITHDRAW_YN
			 , U.ROLE_CODE
			 , U.BLACKLIST_YN
			 , U.BLACKLIST_DATE
			 , U.USER_NO
		  FROM USER_TABLE U
		 WHERE U.WITHDRAW_YN = 'N'
	 	   AND U.USER_ID = ?
	 	   AND U.ROLE_CODE = 2
	</entry>
	<entry key="selectLoginStore">
		SELECT
       	 	   S.STORE_NAME,
		       S.OWNER_NO,
		       S.STORE_XY,
		       S.CATEGORY,
		       S.USER_CODE,
		       S.BUSINESS_REGIST_CODE,
		       S.STORE_CODE,
		       S.APPROVAL,
		       S.ENROLL_DATE,
		       S.TYPE_CODE,
		       S.STORE_ADDR,
		       S.STORE_INFO
 		  FROM STORE_TABLE S
		 WHERE S.USER_CODE = (SELECT U.USER_CODE
                     		    FROM USER_TABLE U
                    		   WHERE U.USER_ID = ?)
	</entry>
	<entry key="selectLoginLicenseManage">
		SELECT
			   L.STORE_NAME,
			   L.BISI_DIV,
			   L.OPEN_DATE,
			   L.STORE_ADDRESS,
			   L.COMPANY,
			   L.ITEM,
			   L.MAIN_ADDRESS,
			   L.LIC_DATE,
			   L.BISI_CODE,
			   L.PICTURE_CODE
		  FROM LICENSE_MANAGE L
		  JOIN STORE_PIC_TABLE P ON(L.PICTURE_CODE = P.PICTURE_CODE)
		  JOIN STORE_TABLE S ON(P.STORE_CODE = S.STORE_CODE)
		  JOIN USER_TABLE U ON(S.USER_CODE = U.USER_CODE)
		 WHERE USER_ID = ?
	</entry>
	<entry key="checkId">
		SELECT
			   U.USER_ID
		  FROM USER_TABLE U
		 WHERE U.USER_ID = ?	
	</entry>
	<entry key="selectAllMenuList">
	SELECT
	       M.MENU_CODE
	     , M.MENU_NAME
	     , M.MENU_EXP
	     , M.PRICE
	     , M.SALES_YN
	     , M.STORE_CODE
	     , P.ORIGIN_NAME
	     , P.ROUTE
	     , P.PICTURE_CODE
	  FROM MENU M
	  JOIN PICTURE P ON (M.PICTURE_CODE = P.PICTURE_CODE)
	 WHERE STORE_CODE = ?
	</entry>
		<entry key="insertNewMenu">
		INSERT
		  INTO MENU
		VALUES
		(
		  SEQ_MENU_CODE.NEXTVAL
		, ?
		, ?
		, ?
		, ?
		, ?
		, ?
		)
	</entry>
	
	<entry key="insertPicture">
	    INSERT
	      INTO PICTURE
	    VALUES
	    (
	     SEQ_PICTURE_CODE.NEXTVAL
	   , SYSDATE
	   , DEFAULT
	   , ?
	   , ?
	   , ?
	    )
	</entry>
	
	<entry key="selectPictureSequence">
	    SELECT
	           SEQ_PICTURE_CODE.CURRVAL
	      FROM DUAL
	</entry>
	
	<entry key="selectDailySales">
	      SELECT A.RNUM
	    	 , A.ORDER_CODE
	    	 , A.ORDER_TIME
	    	 , A.TOTAL_AMOUNT
	    	 , A.STORE_CODE
	    	 , A.TYPE_YN 
	      FROM (SELECT ROWNUM.RNUM
			    	 , B.ORDER_CODE
			    	 , B.ORDER_TIME
			    	 , B.TOTAL_AMOUNT
			    	 , B.STORE_CODE
			    	 , B.TYPE_YN 
			      FROM (SELECT O.ORDER_CODE
					    	 , O.ORDER_TIME
					    	 , O.TOTAL_AMOUNT
					    	 , O.STORE_CODE
					    	 , O.TYPE_YN 
			      		  FROM ORDER_TABLE O   
			      		 WHERE EXTRACT(DAY FROM (ORDER_TIME))=?
			    		   AND STORE_CODE = ?
			    		 ORDER BY ORDER_TIME) B
			    		 ) A
		 WHERE A.RNUM BETWEEN ? AND ? 
	</entry>
	
	<entry key="selectAllSales">
	    SELECT *
	      FROM ORDER_TABLE
	     ORDER BY ORDER_TIME
	
	</entry>
	
	<entry key="selectMonthlySales">
	    SELECT
               EXTRACT(MONTH FROM (ORDER_TIME)) as "MONTH"
             , count(ORDER_CODE) as "COUNT"
             , sum(TOTAL_AMOUNT) as "TOTAL"
          FROM ORDER_TABLE
         GROUP BY EXTRACT(MONTH FROM (ORDER_TIME))
         ORDER BY EXTRACT(MONTH FROM (ORDER_TIME))
	
	</entry>
	
	<entry key = "selectAllSuggestion">
	SELECT A.RNUM
			 , A.BOARD_CODE
		     , A.BOARD_TITLE
		     , A.BOARD_DATE
		  FROM (SELECT ROWNUM RNUM
					 , B.BOARD_CODE
				     , B.BOARD_TITLE
				     , B.BOARD_DATE
				  FROM (SELECT
						       O.BOARD_CODE
						     , O.BOARD_TITLE
						     , O.BOARD_DATE
						  FROM OWNER_INQUIRY O
						 WHERE OWNER_CODE = ?
						 ) B
						 ) A
		  WHERE A.RNUM BETWEEN ? AND ?
	</entry>
	<entry key = "countAllSuggestion">
	
		SELECT
		       COUNT(*)
		  FROM OWNER_INQUIRY O
		 WHERE OWNER_CODE = ?
	</entry>
	<entry key="InsertSuggestion">
	     INSERT
	       INTO OWNER_INQUIRY
	     (
	       BOARD_CODE
	     , BOARD_TITLE
	     , BOARD_DATE
	     , BOARD_CONTENT
	     , VISIBLE_YN
	     , OWNER_CODE
	     
	     )
	     VALUES
	     (
	       SEQ_SUGGESTION_NO.NEXTVAL
	      , ?
	      , SYSDATE
	      , ?
	      , 'N'
	      , ?
	     )
	     
	       
	</entry>
	
	<entry key="SuggestionDetail">
	        SELECT
                    B.BOARD_TITLE as "boardTitle"
                  , B.BOARD_CONTENT as "boardContent"
                  , B.BOARD_DATE as "boardDate"
                  , M.REPLY_CONTENT as "replyContent"
                  , M.REPLY_DATE  as "replyDate"
                  , U.USER_NAME as "userName"
                    FROM STORE_REPLY_BOARD A
                    JOIN OWNER_INQUIRY B ON (A.BOARD_CODE =B.BOARD_CODE)
                    JOIN OWNER_REPLY_MANAGE M ON(A.REPLY_CODE = M.REPLY_CODE)
                    JOIN USER_TABLE U ON(B.OWNER_CODE = U.USER_CODE)
                    WHERE A.BOARD_CODE =?
	</entry>
	<entry key="CommentDetail">
	SELECT  R.REVIEW_CONTENT
	      , UT.USER_ID
	      , Y.REPLY_DATE
       FROM REVIEW R
       JOIN TOTAL_REVIEW T ON(R.REVIEW_CODE = T.REVIEW_CODE)
       JOIN REVIEW_REPLY Y ON(T.REPLY_CODE = Y.REPLY_CODE)
       JOIN ORDER_TABLE OT ON(R.ORDER_CODE = OT.ORDER_CODE)
       JOIN USER_TABLE UT ON(OT.USER_CODE = UT.USER_CODE)
      WHERE R.REVIEW_CODE = ?
	</entry>
	<entry key="getMenuname">
		SELECT
			   ?
		  FROM MENU
		 WHERE STORE_CODE = ?
	</entry>
	<entry key="updateMenuList">
	UPDATE (SELECT * FROM MENU M,PICTURE P WHERE M.PICTURE_CODE = P.PICTURE_CODE)
	   SET PRICE = ?
	     , MENU_EXP =?
	     , SALES_YN = ?
	 WHERE STORE_CODE = ?
	</entry>
	<entry key="deleteMenu">
		DELETE 
		  FROM MENU
     	 WHERE MENU_CODE = ?
	</entry>
	<entry key="SelectDailySalesTotalCount">
		SELECT COUNT(*)
		  FROM ORDER_TABLE
	  	 WHERE STORE_CODE = ?
	</entry>
	<entry key="selectTotalCount">
		    
		select
	    count(*)
	    from order_table a
	    join store_table c on(a.store_code = c.store_code)
	    join user_table d on(c.user_code = d.user_code)
	    where d.user_code =?
	</entry>
	
	<entry key="selectOrderList">
	SELECT
    A.RNUM,
    a.order_code,
    A.user_id,
    a.order_time,
    a.ORDER_PROCEED,
    a.TOTAL_AMOUNT
	    FROM (SELECT ROWNUM RNUM,
                        B.order_code,
                        B.user_id,
                        B.order_time,
                        B.ORDER_PROCEED,
                        B.TOTAL_AMOUNT
                        FROM(SELECT  
                                    C.order_code,
                                    D.user_id,
                                    C.order_time,
                                    C.ORDER_PROCEED,
                                    C.TOTAL_AMOUNT
                                        from order_table C
                                        join user_table D on(C.user_code = D.user_code)
                                        join store_table E on(C.store_code = E.store_code)
                                        join user_table F on(E.user_code = F.user_code)
                                        where F.user_code = ?
                                        ORDER BY C.ORDER_CODE DESC
                            )B
                )A
        WHERE A.RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="DeliveryBasicInfo">
	       SELECT
			     A.ORDER_CODE,
			     A.USER_CODE,
			     B.USER_NAME,
			     A.ORDER_PROCEED,
			     A.OWNER_COMMENT,
			     A.ORDER_TIME,
			     A.TYPE_YN
		    FROM ORDER_TABLE A
		    JOIN USER_TABLE B ON(A.USER_CODE = B.USER_CODE)
		    JOIN STORE_TABLE C ON(A.STORE_CODE = C.STORE_CODE)
		    JOIN USER_TABLE D ON(C.USER_CODE = D.USER_CODE)
		   WHERE D.USER_CODE = ?
		     AND A.TYPE_YN = '배달'
	</entry>
	
	<entry key="PickupBasicInfo">
	       SELECT
			     A.ORDER_CODE,
			     A.USER_CODE,
			     B.USER_NAME,
			     A.ORDER_PROCEED,
			     A.OWNER_COMMENT,
			     A.ORDER_TIME,
			     A.RESERVE_TIME,
			     A.TYPE_YN
		    FROM ORDER_TABLE A
		    JOIN USER_TABLE B ON(A.USER_CODE = B.USER_CODE)
		    JOIN STORE_TABLE C ON(A.STORE_CODE = C.STORE_CODE)
		    JOIN USER_TABLE D ON(C.USER_CODE = D.USER_CODE)
		   WHERE D.USER_CODE = ?
		     AND A.TYPE_YN = '픽업'
	</entry>
	
	<entry key="DeliveryOrderList">
			SELECT 
				    A.ORDER_CODE,
				    C.MENU_NAME,
				    B.AMOUNT,
				    C.PRICE
		      FROM ORDER_DETAIL A
		      JOIN BASKET B ON (A.CART_CODE = B.CART_CODE)
		      JOIN MENU C ON (B.MENU_CODE = C.MENU_CODE)
		      JOIN ORDER_TABLE D ON(A.ORDER_CODE = D.ORDER_CODE)
		      JOIN STORE_TABLE E ON (D.STORE_CODE = E.STORE_CODE)
		      JOIN USER_TABLE F ON (E.USER_CODE = F.USER_CODE)
		      WHERE F.USER_CODE = ?
		        AND A.ORDER_CODE = D.ORDER_CODE
	</entry>
	
	<entry key = "UpdateOwnerComment">
	    UPDATE ORDER_TABLE
           SET 
               ORDER_PROCEED = '승인',
               OWNER_COMMENT = ?
         WHERE ORDER_CODE = ?
	
	</entry>
	
	<entry key = "DenyOwnerComment">
	    UPDATE ORDER_TABLE
           SET 
               ORDER_PROCEED = '취소',
               OWNER_COMMENT = ?
         WHERE ORDER_CODE = ?
	
	</entry>
	
	<entry key="CompleteOrder">
	     UPDATE ORDER_TABLE
           SET 
               ORDER_PROCEED = ?
         WHERE ORDER_CODE = ?
	</entry>
	<entry key="oneselectfee">
	
	SELECT
           A.OWNER_NO
         , B.STORE_NAME
         , B.STORE_ADDRESS
         , B.COMPANY
         , B.ITEM
         , D.USER_NAME
         , E.ORDER_TIME
         , E.TOTAL_AMOUNT
      FROM STORE_TABLE A
      JOIN LICENSE_MANAGE B
        ON(A.BUSINESS_REGIST_CODE = B.BISI_CODE)
      JOIN TOTAL_PAYMENT_LIST C
        ON(A.STORE_CODE = C.STORE_CODE)
      JOIN USER_TABLE D
        ON(A.USER_CODE = D.USER_CODE)
      JOIN ORDER_TABLE E
        ON(A.STORE_CODE  = E.STORE_CODE )
     WHERE A.USER_CODE = ? AND ROWNUM=1
</entry>
	
	<entry key="UpdateOwnerPickAccept">
	UPDATE ORDER_TABLE
           SET 
               ORDER_PROCEED = '승인',
               OWNER_COMMENT = ?
         WHERE ORDER_CODE = ?
	</entry>
	
	<entry key="selectNoshowinfo">
	SELECT 
       O.USER_CODE as "USER_CODE"
     , O.ORDER_CODE as "ORDER_CODE"
     , O.STORE_CODE as "STORE_CODE"
    FROM ORDER_TABLE O 
    JOIN TOTAL_PAYMENT_LIST M ON (O.ORDER_CODE = M.ORDER_CODE)
    JOIN PAYMENT P ON (M.PAYMENT_CODE = P.PAYMENT_CODE) 
    WHERE P.PAYMENT_METHOD = '현금'
      AND O.TYPE_YN = '픽업'
      AND O.STORE_CODE = ?
	</entry>
	
	<entry key="CountNoshowUser">
	    SELECT 
               COUNT(*)
          FROM NO_SHOW
         WHERE USER_CODE = ?
	</entry>
	
	<entry key= "InsertNoShowUser">
	INSERT INTO NO_SHOW
	VALUES
	(
	  ?
	 ,?
	 ,?
	)
	


	</entry>
	
	<entry key="updateBlockUser">
	UPDATE USER_TABLE
	   SET 
	   BLACKLIST_YN = 'Y',
	   BLACKLIST_DATE= SYSDATE
	 WHERE USER_CODE = ?
	</entry>
</properties>