<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	
	<entry key="selectPhotoById">
    SELECT A.STORE_CODE CODE, C.ROUTE ROUTE
    FROM STORE_TABLE A
    JOIN STORE_PIC_TABLE B
    ON A.STORE_CODE = B.STORE_CODE
    JOIN PICTURE C
    ON B.PICTURE_CODE = C.PICTURE_CODE
    WHERE A.STORE_CODE = ?
	</entry>
	
	<entry key="selectInfoById">
    SELECT A.STORE_NAME STORE_NAME, ROUND(AVG(B.SATISFIED),1) STAR, A.STORE_ADDR ADDR, C.USER_PHONE PHONE, A.CATEGORY CATE, A.STORE_INFO INFO
	FROM STORE_TABLE A
	JOIN REVIEW B
	ON A.STORE_CODE = B.STORE_CODE
	JOIN USER_TABLE C
	ON A.USER_CODE = C.USER_CODE
	WHERE A.STORE_CODE = ?
	GROUP BY A.STORE_NAME, A.STORE_ADDR, C.USER_PHONE, A.CATEGORY, A.STORE_INFO
	</entry>
	
	<entry key="selectReviewCntById">
	SELECT COUNT(CASE WHEN A.SATISFIED = 1 THEN 1 END) BEST
		 , COUNT(CASE WHEN A.SATISFIED = 2 THEN 1 END) SOSO
		 , COUNT(CASE WHEN A.SATISFIED = 3 THEN 1 END) BAD
	FROM REVIEW A
	WHERE A.STORE_CODE = ?
	</entry>
	
	<entry key="selectReviewById">
	SELECT C.USER_ID ID, A.REVIEW_CONTENT CONTENT, D.ROUTE PHOTO, A.SATISFIED
	FROM REVIEW A
	JOIN ORDER_TABLE B 
	ON A.ORDER_CODE = B.ORDER_CODE
	JOIN USER_TABLE C 
	ON B.USER_CODE = C.USER_CODE
	JOIN PICTURE D
	ON A.PICTURE_CODE = D.PICTURE_CODE
	WHERE A.STORE_CODE = ?
	</entry>
	
</properties>
